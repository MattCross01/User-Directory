{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","e","unregister","catch","console","error","message"],"mappings":"iLAAkBA,QAAQ,cAAcC,OAAOC,SAASC,UAAU,UAElEF,OAAOC,SAASC,UAAUF,OAAOC,SAASC,SAASC,MAClD,2D,WCGDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,MAEJC,SAASC,eAAe,SDkCuC,kBAAkBC,WAAWA,UAAUC,cAAcC,MACjFC,MAAK,SAAAC,GAAIA,EAAEC,gBAAeC,OAAM,SAAAF,GAC7BG,QAAQC,MAAMJ,EAAEK,a","file":"static/js/main.d21194c1.chunk.js","sourcesContent":["const isLocalhost=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===\r\n\r\nwindow.location.hostname||window.location.hostname.match\r\n(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\r\n\r\nexport function register(e){if(\"production\"===process.env.NODE_ENV&&\"serviceWorker\"in navigator){\r\n    \r\n    if(new URL(process.env.PUBLIC_URL,window.location.href)\r\n    \r\n    .origin!==window.location.origin)\r\n    \r\n    return;window.addEventListener(\"load\",()=>{\r\n        \r\n        const o=`${process.env.PUBLIC_URL}/service-worker.js`;\r\n        \r\n        isLocalhost?(checkValidServiceWorker(o,e),\r\n        navigator.serviceWorker.ready.then(()=>{\r\n            \r\n            console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA\")})):registerValidSW(o,e)})}}\r\n            \r\n            function registerValidSW(e,o)\r\n            {navigator.serviceWorker.register(e)\r\n                .then(e=>{e.onupdatefound=(()=>{\r\n                    \r\n                    const r=e.installing;null!=r&&(r.onstatechange=(()=>{\"installed\"===r.state&&(navigator.serviceWorker.controller?(\r\n                        console.log(\"New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.\"),\r\n                        \r\n                        o&&o.onUpdate&&o.onUpdate(e)):(\r\n                            console.log(\"Content is cached for offline use.\"),\r\n                            \r\n                            o&&o.onSuccess&&o.onSuccess(e)))}))})})\r\n                            .catch(e=>{console.error(\"Error during service worker registration:\",e)})}\r\n                            \r\n                            function checkValidServiceWorker(e,o){fetch(e,{headers:{\"Service-Worker\":\"script\"}})\r\n                            .then(r=>{\r\n                                \r\n                                const n=r.headers.get(\"content-type\");\r\n                                \r\n                                404===r.status||null!=n&&-1===n.indexOf(\"javascript\")?navigator.serviceWorker.ready\r\n                                \r\n                                .then(e=>{e.unregister()\r\n                                    .then(()=>{window.location.reload()})}):registerValidSW(e,o)})\r\n                                    .catch(()=>{console.log(\"No internet connection found. App is running in offline mode.\")})}\r\n                                    \r\n                                    export function unregister(){\"serviceWorker\"in navigator&&navigator.serviceWorker.ready\r\n                                    .then(e=>{e.unregister()}).catch(e=>{\r\n                                        console.error(e.message)})}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}